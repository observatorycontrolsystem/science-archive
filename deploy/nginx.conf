upstream science_archive {

    server science_archive:9501;

}


server {


    listen 80;


    location / {

        proxy_pass http://science_archive;
        proxy_http_version 1.1;
        proxy_buffers 16 1M;
        proxy_buffer_size 1M;
        client_body_buffer_size 10M;
        client_max_body_size 10M;
        proxy_set_header Connection "";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Hide the mod_zip header from the client
        proxy_hide_header X-Archive-Files;

    }

    location /static/ {

        alias /static/;

    }

    # Note this will only work if you have the nginx mod-zip plugin installed in your image
    # The NGINX mod_zip plugin requires that files are loaded through an
    # NGINX location block. They cannot be loaded from an external URL.
    # Therefore, we use NGINX to proxy traffic to AWS S3 to work around
    # this limitation.
    location /zip-files/ {
        internal;
        rewrite /zip-files/(.*)$ /$1 break;
        proxy_pass {INSERT_YOUR_BASE_FILESTORE_URL_PATH_HERE: Ex. https://mybucket.s3.us-west-2.amazonaws.com/};
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_intercept_errors on;
    }

    # Note this will only work if you have the nginx mod-zip plugin installed in your image
    # Internal-only route for the mod_zip transparent uncompressed
    # ZIP file download support. This URL is marked as internal (cannot
    # be used by an external user: it is only valid for the NGINX
    # webserver itself to access).
    #
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#internal
    #
    # This ensures that a user who DOES know the AWS S3 Version ID of
    # a file which they are NOT permitted to access cannot use this route
    # to download a file they do not have access to.
    #
    # The traffic is passed directly to the Python backend application,
    # which handles the actual AWS S3 access and funpack in Python code.
    location /zip-funpack/ {
        internal;
        proxy_pass http://science_archive;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_intercept_errors on;
        proxy_set_header Connection "";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Hide the mod_zip header from the client
        proxy_hide_header X-Archive-Files;
    }

}
